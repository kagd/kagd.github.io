{"version":3,"sources":["shared/Loading.tsx","redux/actionTypes.ts","constants/asyncState.ts","redux/axiosMiddleware.ts","redux/article.ts","redux/fetchData.ts","components/blog/Entry.tsx","components/blog/ListItem.tsx","redux/articles.ts","components/blog/List.tsx","components/ErrorBoundary.tsx","components/rss-feed/ListItem.tsx","components/rss-feed/List.tsx","components/Home.tsx","components/NotFound.tsx","App.tsx","registerServiceWorker.ts","index.tsx"],"names":["ACTION_TYPES","shared_Loading","react","className","ASYNC_STATE","actionTypes","asyncState","createAxiosAction","payload","type","AXIOS_ACTION","initialState","fetchStatus","NOT_STARTED","isFetchComplete","state","DONE","ERROR","articlesReducer","action","ARTICLES_FETCH","__assign","LOADING","ARTICLES_FETCH_RESPONSE","article","data","ARTICLES_FETCH_ERROR","fetchArticle","id","url","initActionType","successActionType","failedActionType","redux_fetchData","dispatch","actionCreator","actionCreatorParams","_a","_b","method","requestParams","axios_default","a","request","then","response","error","Entry","props","location","pathname","date","title","dangerouslySetInnerHTML","__html","content","ListItem","key","es","to","articles_initialState","articles","getArticles","Object","keys","map","articles_isFetchComplete","articles_articlesReducer","ARTICLES_FETCH_ALL","articles_assign","ARTICLES_FETCH_ALL_RESPONSE","reduce","memo","item","ARTICLES_FETCH_ALL_ERROR","fetchArticles","List","components_ErrorBoundary","_super","ErrorBoundary","_this","apply","this","arguments","hasError","__extends","getDerivedStateFromError","prototype","componentDidCatch","render","children","rss_feed_ListItem","Date","pubDate","href","link","target","getFullYear","getMonth","getDate","description","rss_feed_List","setArticles","urlParts","encodeURIComponent","fetch","join","json","items","regex","replacement","stringReplacer","replace","List_assign","length","components_Home","components_NotFound","redirectPathPrefix","src_App","search","window","indexOf","role","path","isLocalhost","Boolean","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","catch","react_dom","document","getElementById","URL","toString","origin","addEventListener","status","headers","get","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.d4b93a65.chunk.js","sourcesContent":["import * as React from 'react';\n\nfunction Loading() {\n  return (\n    <div className=\"loading\">\n      <span>Loading...</span>\n    </div>\n  );\n}\n\nexport default Loading;\n","enum ACTION_TYPES {\n  ARTICLES_FETCH = 'ARTICLES_FETCH',\n  ARTICLES_FETCH_RESPONSE = 'ARTICLES_FETCH_RESPONSE',\n  ARTICLES_FETCH_ERROR = 'ARTICLES_FETCH_ERROR',\n  ARTICLES_FETCH_ALL = 'ARTICLES_FETCH_ALL',\n  ARTICLES_FETCH_ALL_RESPONSE = 'ARTICLES_FETCH_ALL_RESPONSE',\n  ARTICLES_FETCH_ALL_ERROR = 'ARTICLES_FETCH_ALL_ERROR',\n  AXIOS_ACTION = 'shared/middleware/axios',\n  DIABLO_HERO_FETCH_ALL = 'DIABLO_HERO_FETCH_ALL',\n  DIABLO_HERO_FETCH_ALL_RESPONSE = 'DIABLO_HERO_FETCH_ALL_RESPONSE',\n  DIABLO_HERO_FETCH_ALL_ERROR = 'DIABLO_HERO_FETCH_ALL_ERROR',\n}\n\nexport namespace Interfaces {\n  export interface ActionType {\n    type: ACTION_TYPES;\n    data?: any;\n  }\n}\n\nexport default ACTION_TYPES;","enum ASYNC_STATE {\n  NOT_STARTED = 'NOT_STARTED',\n  LOADING = 'LOADING',\n  DONE = 'DONE',\n  ERROR = 'ERROR',\n}\n\nexport default ASYNC_STATE;\n","import axios, { AxiosResponse } from 'axios';\nimport {\n  AnyAction,\n  Middleware,\n} from 'redux';\nimport ACTION_TYPES from './actionTypes';\nimport { Dispatch } from 'react-redux';\n\nexport interface AxiosMiddlewareActionPayload {\n  url: string;\n  method?: 'get' | 'post' | 'put' | 'delete';\n  data?: any;\n  initActionType: ACTION_TYPES;\n  successActionType: ACTION_TYPES;\n  failedActionType: ACTION_TYPES;\n}\n\nexport interface AxiosMiddlewareAction {\n  type: ACTION_TYPES.AXIOS_ACTION;\n  payload: AxiosMiddlewareActionPayload;\n}\n\nexport function createAxiosAction(payload: AxiosMiddlewareActionPayload): AxiosMiddlewareAction {\n  return {\n    type: ACTION_TYPES.AXIOS_ACTION,\n    payload,\n  };\n}\n\nconst axiosMiddleware: Middleware = ({ dispatch }) => (next) => (action: AnyAction) => {\n  if (action.type === ACTION_TYPES.AXIOS_ACTION) {\n    fetchData(dispatch, action.payload);\n  }\n\n  return next(action);\n};\n\nfunction fetchData(dispatch: Dispatch, payload: AxiosMiddlewareActionPayload) {\n  const {\n    data,\n    method = 'get',\n    url,\n    initActionType,\n    successActionType,\n    failedActionType,\n  } = payload;\n\n  // dispatch an action indicating a pending API call\n  dispatch({\n    type: initActionType,\n  });\n\n  // we need to make the call and then dispatch the correct action types\n  const requestParams = {\n    data,\n    method,\n    url,\n  };\n\n  axios.request(requestParams).then((response: AxiosResponse) => {\n    dispatch({\n      type: successActionType,\n      data: response.data,\n    });\n  }, (error: any) => {\n    dispatch({\n      type: failedActionType,\n      data,\n      error,\n    });\n  });\n}\n\nexport default axiosMiddleware;\n","import ACTION_TYPES, { Interfaces } from './actionTypes';\nimport ASYNC_STATE from '../constants/asyncState';\nimport { createAxiosAction } from '../redux/axiosMiddleware';\nimport * as Models from 'models';\n\ninterface State {\n  article?: Models.Article;\n  fetchStatus: ASYNC_STATE;\n}\n\nexport const initialState: State = {\n  fetchStatus: ASYNC_STATE.NOT_STARTED,\n};\n\nexport const moduleName = 'articles';\n\nexport const getArticle = (state: State) => state.article;\nexport const isFetchComplete = (state: State) => {\n  return state.fetchStatus === ASYNC_STATE.DONE || state.fetchStatus === ASYNC_STATE.ERROR;\n};\n\nexport default function articlesReducer(state: State, action: Interfaces.ActionType): State {\n  switch (action.type) {\n    case ACTION_TYPES.ARTICLES_FETCH:\n      return {\n        ...state,\n        fetchStatus: ASYNC_STATE.LOADING\n      };\n    case ACTION_TYPES.ARTICLES_FETCH_RESPONSE:\n      return {\n        ...state,\n        article: action.data,\n        fetchStatus: ASYNC_STATE.DONE\n      };\n    case ACTION_TYPES.ARTICLES_FETCH_ERROR:\n      return {\n        ...state,\n        fetchStatus: ASYNC_STATE.ERROR\n      };\n    default:\n      return state;\n  }\n}\n\nexport function fetchArticle(id: string) {\n  const action = createAxiosAction({\n    url: `${id}.json`,\n    initActionType: ACTION_TYPES.ARTICLES_FETCH,\n    successActionType: ACTION_TYPES.ARTICLES_FETCH_RESPONSE,\n    failedActionType: ACTION_TYPES.ARTICLES_FETCH_ERROR,\n  });\n\n  return action;\n}\n","import { Dispatch } from 'react';\nimport { AxiosMiddlewareAction } from './axiosMiddleware';\nimport axios, { AxiosResponse } from 'axios';\n\nfunction fetchData<T>(dispatch: Dispatch<any>, actionCreator: (args?: T) => AxiosMiddlewareAction, actionCreatorParams?: T) {\n  const action: AxiosMiddlewareAction = actionCreator(actionCreatorParams);\n  const {\n    data,\n    method = 'get',\n    url,\n    initActionType,\n    successActionType,\n    failedActionType,\n  } = action.payload;\n\n  // dispatch an action indicating a pending API call\n  dispatch({\n    type: initActionType,\n  });\n\n  // we need to make the call and then dispatch the correct action types\n  const requestParams = {\n    data,\n    method,\n    url,\n  };\n\n  axios.request(requestParams).then((response: AxiosResponse) => {\n    dispatch({\n      type: successActionType,\n      data: response.data,\n    });\n  }, (error: any) => {\n    dispatch({\n      type: failedActionType,\n      data,\n      error,\n    });\n  });\n}\n\nexport default fetchData;","import * as React from 'react';\nimport Loading from 'shared/Loading';\nimport articleReducer, {\n  fetchArticle,\n  initialState,\n  isFetchComplete,\n} from 'redux/article';\nimport fetchData from 'redux/fetchData';\nimport { RouteComponentProps } from '@reach/router';\n\ninterface RouteParams {\n  id: string;\n}\n\ntype ArticleProps = RouteComponentProps<RouteParams>;\n\nfunction Article(props: ArticleProps) {\n  const [state, dispatch] = React.useReducer(articleReducer, initialState);\n\n  React.useEffect(() => {\n    if (props.location && props.location.pathname) {\n      fetchData(dispatch, fetchArticle, props.location.pathname);\n    }\n  }, [props.location]);\n\n  if (!isFetchComplete(state)) {\n    return <Loading />;\n  }\n\n  if (!state.article) {\n    return <article>There was an error retrieving article</article>;\n  }\n\n  return (\n    <article className=\"blog-entry\">\n      <span className=\"blog-entry-date\">{state.article.date}</span>\n      <h1 className=\"blog-entry-title\">{state.article.title}</h1>\n      <div className=\"blog-entry-content\" dangerouslySetInnerHTML={{ __html: state.article.content }} />\n    </article>\n  );\n}\n\nexport default Article;\n","import * as React from 'react';\nimport { Link } from '@reach/router';\nimport * as Models from 'models';\n\ninterface ArticlesListProps {\n  article: Models.Article;\n}\n\nfunction ArticlesListItem(props: ArticlesListProps) {\n  const { article } = props;\n\n  return (\n    <article key={article.title}>\n      <h3><Link to={article.id}>{article.title}</Link></h3>\n      <span className=\"date\">{article.date}</span>\n    </article>\n  );\n}\n\nexport default ArticlesListItem;","import ACTION_TYPES, { Interfaces } from './actionTypes';\nimport ASYNC_STATE from '../constants/asyncState';\nimport { createAxiosAction } from '../redux/axiosMiddleware';\nimport * as Models from 'models';\n\ntype Articles = {\n  [key: string]: Models.Article;\n};\n\nexport interface State {\n  articles: Articles;\n  fetchStatus: ASYNC_STATE;\n}\n\nexport const initialState: State = {\n  articles: {},\n  fetchStatus: ASYNC_STATE.LOADING,\n};\n\nexport const getArticles = (state: State): Models.Article[] => {\n  const articleIds = Object.keys(state.articles);\n  const articles = articleIds.map((id) => {\n    return state.articles[id];\n  });\n\n  return articles;\n};\n\nexport const isFetchComplete = (state: State) => {\n  return state.fetchStatus === ASYNC_STATE.DONE || state.fetchStatus === ASYNC_STATE.ERROR;\n};\n\nexport default function articlesReducer(state: State, action: Interfaces.ActionType): State {\n  switch (action.type) {\n    case ACTION_TYPES.ARTICLES_FETCH_ALL:\n      return {\n        ...state,\n        fetchStatus: ASYNC_STATE.LOADING,\n      };\n    case ACTION_TYPES.ARTICLES_FETCH_ALL_RESPONSE:\n      const articles = action.data.reduce(function (memo: Articles, item: Models.Article) {\n        memo[item.id] = item;\n        return memo;\n      }, {});\n      return {\n        ...state,\n        articles,\n        fetchStatus: ASYNC_STATE.DONE,\n      };\n    case ACTION_TYPES.ARTICLES_FETCH_ALL_ERROR:\n      return {\n        ...state,\n        fetchStatus: ASYNC_STATE.ERROR\n      };\n    default:\n      return state;\n  }\n}\n\nexport function fetchArticles() {\n  const action = createAxiosAction({\n    url: '/articles/list.json',\n    initActionType: ACTION_TYPES.ARTICLES_FETCH_ALL,\n    successActionType: ACTION_TYPES.ARTICLES_FETCH_ALL_RESPONSE,\n    failedActionType: ACTION_TYPES.ARTICLES_FETCH_ALL_ERROR,\n  });\n\n  return action;\n}\n","import * as React from 'react';\nimport Loading from 'shared/Loading';\nimport ListItem from './ListItem';\nimport articlesReducer, {\n  fetchArticles,\n  getArticles,\n  initialState,\n  isFetchComplete,\n} from 'redux/articles';\nimport fetchData from 'redux/fetchData';\n\nfunction Articles() {\n  const [state, dispatch] = React.useReducer(articlesReducer, initialState);\n\n  React.useEffect(() => {\n    fetchData(dispatch, fetchArticles);\n  }, []);\n\n  const articles = getArticles(state);\n\n  return (\n    <section className=\"article-list blog\">\n      <h2>Blog</h2>\n      {!isFetchComplete(state) && <Loading />}\n      {articles.map((article) => <ListItem key={article.title} article={article} />)}\n    </section>\n  );\n}\n\nexport default Articles;\n","import * as React from 'react';\n\nclass ErrorBoundary extends React.Component {\n  state = {\n    hasError: false\n  };\n\n  static getDerivedStateFromError() {\n    // Update state so the next render will show the fallback UI.\n    return { hasError: true };\n  }\n\n  componentDidCatch() {\n    // You can also log the error to an error reporting service\n  }\n\n  render() {\n    if (this.state.hasError) {\n      // You can render any custom fallback UI\n      return <h1>Something went wrong.</h1>;\n    }\n\n    return this.props.children;\n  }\n}\n\nexport default ErrorBoundary;\n","import * as React from 'react';\nimport { RssItem } from 'models';\n\ninterface Props {\n  article: RssItem;\n}\n\nfunction ListItem(props: Props) {\n  const date = new Date(props.article.pubDate);\n  return (\n    <article key={props.article.title} className=\"article-list-item\">\n      <h3><a href={props.article.link} target=\"_blank\">{props.article.title}</a></h3>\n      <span className=\"date\">{`${date.getFullYear()}-${date.getMonth() + 1}-${date.getDate()}`}</span>\n      <p dangerouslySetInnerHTML={{ __html: props.article.description }} />\n    </article>\n  );\n}\nexport default ListItem;\n","import * as React from 'react';\nimport { RssItem, Rss } from 'models';\nimport ListItem from './ListItem';\nimport Loading from 'shared/Loading';\n\ninterface Props {\n  className: string;\n  title: string;\n  url: string;\n}\n\ninterface StringReplacer {\n  regex: RegExp;\n  replacement: string;\n}\n\nfunction List(props: Props) {\n  const [articles, setArticles] = React.useState<RssItem[]>([]);\n  React.useEffect(function () {\n    const urlParts = [\n      'https://api.rss2json.com/v1/api.json?',\n      `rss_url=${encodeURIComponent(props.url)}`,\n      `api_key=nlzxnnxh5caeaemhefqniyymygaowzk3002byhfh`\n    ];\n    fetch(urlParts.join('&'))\n      .then(function (response) {\n        return response.json();\n      })\n      .then(function (json: Rss) {\n        const items = json.items.map(function (item) {\n          const stringReplacers: StringReplacer[] = [\n            // replace images to prevent them loading even when hidden by CSS\n            { regex: /<img.+?[\\/]?>/gi, replacement: '' },\n            // add target=\"_blank\" to links\n            { regex: /(<a.+?)>/gi, replacement: '$1 target=\"_blank\">' },\n          ];\n          const description = stringReplacers.reduce(function (memo, stringReplacer) {\n            return memo.replace(stringReplacer.regex, stringReplacer.replacement);\n          }, item.description);\n          return {\n            ...item,\n            description,\n          };\n        });\n        setArticles(items);\n      });\n  }, []);\n\n  return (\n    <section className={`article-list ${props.className}`}>\n      <h2>{props.title}</h2>\n      {articles.length === 0 && <Loading />}\n      {articles.map((article) => <ListItem key={article.title} article={article} />)}\n    </section>\n  );\n}\nexport default List;\n","import * as React from 'react';\nimport BlogList from './blog/List';\nimport { RouteComponentProps } from '@reach/router';\nimport ErrorBoundary from './ErrorBoundary';\nimport RssFeedList from './rss-feed/List';\n\ntype HomeProps = RouteComponentProps<{}>;\n\nfunction Home(props: HomeProps) {\n  return (\n    <div className=\"home\">\n      <ErrorBoundary>\n        <BlogList />\n      </ErrorBoundary>\n\n      <ErrorBoundary>\n        <RssFeedList title=\"IMSA\" url=\"https://www.imsa.com/rss.xml\" className=\"imsa\" />\n      </ErrorBoundary>\n\n      <ErrorBoundary>\n        <RssFeedList title=\"Autosport IMSA\" url=\"https://www.autosport.com/rss/feed/imsa\" className=\"autosport\" />\n      </ErrorBoundary>\n    </div>\n  );\n}\nexport default Home;\n","import * as React from 'react';\nimport { Link, RouteComponentProps } from '@reach/router';\n\ntype NotFoundPropsProps = RouteComponentProps<{}>;\n\nfunction NotFound(props: NotFoundPropsProps) {\n  return (\n    <div>\n      <h2>My Bad</h2>\n      <p>You have found a path that I didn't account for.</p>\n      <Link to=\"/\">Home</Link>\n    </div>\n  );\n}\nexport default NotFound;\n","import * as React from 'react';\nimport BlogEntry from './components/blog/Entry';\nimport Home from './components/Home';\nimport NotFound from './components/NotFound';\nimport { Link, Router, navigate } from '@reach/router';\n\nconst redirectPathPrefix = '?redirect=';\n\nfunction App() {\n  React.useEffect(function () {\n    const { search } = window.location;\n    if (search.indexOf(redirectPathPrefix) === 0) {\n      navigate(search.replace(`${redirectPathPrefix}`, ''), { replace: true });\n    }\n  }, []);\n\n  return (\n    <div className=\"wrapper\">\n      <header>\n        <nav>\n          <ul>\n            <li>\n              <Link to=\"/\">\n                <span>Grant R. Klinsing</span>\n              </Link>\n            </li>\n            <li>\n              <a href=\"http://github.com/kagd\" target=\"_blank\">\n                <span>Github</span>\n              </a>\n            </li>\n            <li>\n              <a href=\"http://twitter.com/gklinsing\" target=\"_blank\">\n                <span>Twitter</span>\n              </a>\n            </li>\n            <li>\n              <a href=\"https://www.linkedin.com/in/grantklinsing\" target=\"_blank\">\n                <span>LinkedIn</span>\n              </a>\n            </li>\n          </ul>\n        </nav>\n      </header>\n\n      <section className=\"main\" id=\"main\" role=\"main\">\n        <Router>\n          <Home path=\"/\" />\n          <BlogEntry path=\"/articles/*\" />\n          <NotFound path=\"*\" />\n        </Router>\n      </section>\n    </div>\n  );\n}\n\nexport default App;\n","// tslint:disable:no-console\n// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the 'N+1' visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL!,\n      window.location.toString()\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (!isLocalhost) {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      } else {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker) {\n          installingWorker.onstatechange = () => {\n            if (installingWorker.state === 'installed') {\n              if (navigator.serviceWorker.controller) {\n                // At this point, the old content will have been purged and\n                // the fresh content will have been added to the cache.\n                // It's the perfect time to display a 'New content is\n                // available; please refresh.' message in your web app.\n                console.log('New content is available; please refresh.');\n              } else {\n                // At this point, everything has been precached.\n                // It's the perfect time to display a\n                // 'Content is cached for offline use.' message.\n                console.log('Content is cached for offline use.');\n              }\n            }\n          };\n        }\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type')!.indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import * as React from 'react';\nimport * as ReactDOM from 'react-dom';\nimport App from './App';\nimport registerServiceWorker from './registerServiceWorker';\nimport './index.css';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root') as HTMLElement\n);\nregisterServiceWorker();\n"],"sourceRoot":""}