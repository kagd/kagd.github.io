{"id":"/articles/2012/10/10/moving-from-net-to-ruby-twice","title":"Moving from .NET to Ruby... Twice","date":"2012-10-10 05:40 MDT","tags":"ruby, .net, startup","content":"<p>It&#39;s not often, especially in the startup environment, that you get the opportunity to swith coding languages. It is a risky endeavor to move everything that you have for the sake of coding speed, performance, and/or pool of developer talent. You already have a code base and a team that is well versed in the language. And, how long would it take for that entire team to ramp up in proficiency, and manage bugs or features in the legacy product. Not to mention investors, they need and want to see results quickly. It would take great pressure to need to change that up.</p>\n<p>Considering all those factors, it&#39;s crazy to think that I&#39;ve been that process, twice.</p>\n<h2 id=\"the-first-go-around\">The first go around</h2>\n<h4 id=\"avenue-right\">Avenue Right</h4>\n<p>So, the first time that I was presented with moving from .NET to Ruby on Rails, it was more out of necessity than want.</p>\n<p>In the year prior to the decision to switch, our team dwindled from 5 full time developers and 1 contract developer, to 2 full time. The product had been losing steam with all the product direction changes and moral was most definitely low. That, coupled with a CEO that blew his top when his product direction fell short of expectation, was reason we were losing people.</p>\n<p>I was one of two developers, and neither of us had a great understanding of .NET. I was initially a Front-End Developer with some experience working with Ruby on Rails and my co-worker, JD, was the team lead and DBA. Again, he had SOME working experience with Rails.</p>\n<p>After a particularly trying day of plowing through .NET code, I laid in bed at home hating what I was doing. Then, I began to think, <em>&quot;What would happen if we started creating this application in Ruby on Rails?&quot;</em> My first thoughts were that, it would be quicker since my knowledge of .NET was pretty weak, and Ruby on Rails along with gems provided a quick, easy was to setup an application. Also, it didn&#39;t hurth that wanted to work with it and the same could not be said for .NET.</p>\n<p>The following morning during our daily stand-up, JD, out of the blue, brought up the exact subject I was thinking about the night prior. We discussed the probability and logistics of creating everything in RoR. How long it would take? How could we get the CEO and Board of Investors on board? Could we create something meaningful in the timeframe that we had?</p>\n<p>After talking it over, we both decided that we would work on the .NET app during work hours, and in the off hours, we would create the Rails app. We both were committed to dedicating a lot of our personal hours into making an app that we could quickly create and manage. Since, we were creating everything in our off hours, we didn&#39;t tell our CEO of our plans. But, there was other reason too. Product misdirection over and over again. We were constantly shifting our audience. One month it was small advertising agencies, the next would be small business. I may not sound like a bit change, but the product shift because of it, was great. We  We wanted to avoid all that, and create a product with the correct direction. And, by keeping the CEO in the dark, we were avoiding him changing things up drastically before it&#39;s release.</p>\n<p>We were taking a big risk. We risked our jobs, the company and our personal lives by taking so much time doing what we saw as necessary. The risk became even larger when the project started to bleed into work hours. The bleed eventually became bad enough that JD and I had a very serious decision to make about continuing to do non-work work during office hours. We went back and forth on how much we needed to do and the timeline. Eventually we came to a consensous. We were going to start developing the Rails app full time.</p>\n<p>We were disregarding what the entire company thought we were doing, in favor of creating something that the company needed, a product with clear cut direction.</p>\n<p>We continued the full time developement for about a month when, again out of the blue, the CEO came to JD and myself and asked &quot;how fast could we complete the product with Ruby on Rails?&quot;. We were stunned. The thing that we were hiding, the thing that the company needed, was now being brought up organically by the main person that we were trying to hide it from. JD and I looked at each other, smiled and said, &quot;Well...&quot;. We told him about our conversations and how, for a month, we had been creating this product replacement.</p>\n<p>He wasn&#39;t upset. In fact, he was plesantly surprised. Our gamble paid off. All of the work that we put in, wasn&#39;t in vain. JD and I commented on how great it was that both of us were on the same page, on the same day, a month earlier. Funny how things work like that sometimes. Needless to say, we were both stoked that we had been creating the correct app, with no direction from management.</p>\n<p>But, like all thinks good, it came to an end. Our CEO had a new product to manipulate. That was the exact scenario that we were looking to avoid. <em>&quot;Change this&quot;</em>, <em>&quot;change that&quot;</em>, <em>&quot;I have an idea&quot;</em>. Again, the product was going down the shitter. I couldn&#39;t deal with it. I almost instantly began looking for new job. As a developer, <strong>I take pride in creating things</strong>. Not everything is gold by any stretch of the imagination, but I felt like a proud father for what we had created and seeing it torn apart was too much.</p>\n<h2 id=\"chapter-2-d-j-vu\">Chapter 2 - Déjà vu</h2>\n<h4 id=\"blogfrog\">BlogFrog</h4>\n<p>I left the Avenue Right for <a href=\"http://theblogfrog.com\">BlogFrog</a>. It&#39;s on the .NET platform. I know what you are thinking, &quot;WTF? You don&#39;t like that language. Why in the hell did you go to another .NET shop?&quot; Answer, it&#39;s in sunny Boulder, CO. Oh, and I should mention that the previous place was in Fargo, ND. &#39;Nuf said.</p>\n<p>Anyway, it was about 10 months after joining BlogFrog that we were presented with the same dilemma, should we move to Ruby on Rails? It wasn&#39;t being considered because of the lack of man power. It wasn&#39;t because the CEO was indecisive. It was being contemplated for the short timeline of product roadmap, speed of developement and local developer talent. As a .NET shop in Boulder, we were having difficulty finding developers proficient in .NET. In Boulder, Rails was and is the hotness. A lot of companies use it and that means there was talent nearby.</p>\n<p>But, just because there is talent and man power doesn&#39;t make switching the correct decision? The same rational that applied at the last place, applied here. A lot of the same questions had to be answered. Will we accomplish everything we need to in the same timeframe? How long will it take to get up to speed? How performant is the language?</p>\n<p>Everything was weighed, discussions were had. Many of which left me feeling excited, because of the great opportunity to be had. BlogFrog&#39;s position within the market was great. Because of the great position, we needed to get everything accomplished in short order, or risk loosing market share. Ruby is great for that, if for no other reason than the extensive gems available.</p>\n<p>So, the decision was made. Ruby on Rails upon Amazon with MySQL. I have to say, rails took a bit to get back into. I had about 10 months off in .NET and was knee deep in node.js on personal projects. But ultimately, I have been happy with the change. Although at the time of writing this, we are only about a month into the process. So, it&#39;s probably a little early in the process to see how well the grand experiment will work, but if the first month is any indication, we have an ambitious timeline but accomplishable. And, we will only get better from here.</p>\n"}