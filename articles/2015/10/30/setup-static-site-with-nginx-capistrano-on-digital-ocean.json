{"id":"/articles/2015/10/30/setup-static-site-with-nginx-capistrano-on-digital-ocean","title":"Setup static site with Nginx & Capistrano on Digital Ocean","date":"2015-10-30 08:02 MDT","tags":"nginx, capistrano, digital ocean","content":"<p>Setting up a static site on Digital Ocean is pretty simple. First we will create a\nuser that will run the Capistrano deployment. Then, setup SSH, install Nginx, and\nfinally run Capistrano. Let&#39;s get started!</p>\n<p>READMORE</p>\n<p><strong>Note:</strong> All commands should be run as root unless specified. The Digital Ocean\ninstance setup here is for Ubuntu.</p>\n<h1 id=\"setup-deploy-user\">Setup Deploy User</h1>\n<p>First let&#39;s SSH into the Digital Ocean server and add a new user called <em>deploy</em>.</p>\n<pre><code class=\"hljs bash\"><span class=\"hljs-keyword\">adduser </span>deploy\n</code></pre>\n<p>Then to add your new user to the sudo group</p>\n<pre><code class=\"hljs bash\">gpasswd -<span class=\"hljs-selector-tag\">a</span> deploy sudo\n</code></pre>\n<p>Now the <em>deploy</em> user can run commands with super user privileges!</p>\n<p>Switch to new user for the following commands</p>\n<pre><code class=\"hljs bash\"><span class=\"hljs-attribute\">su - deploy</span>\n</code></pre>\n<h1 id=\"setup-ssh-as-the-deploy-user\">Setup SSH as the deploy user</h1>\n<p>Create a new directory called .ssh and restrict its permissions with the following commands:</p>\n<pre><code class=\"hljs bash\"><span class=\"hljs-built_in\">mkdir</span> .ssh\n# <span class=\"hljs-keyword\">set</span> permissions <span class=\"hljs-keyword\">so</span> deploy can <span class=\"hljs-keyword\">read</span>, <span class=\"hljs-keyword\">write</span> <span class=\"hljs-built_in\">and</span> <span class=\"hljs-keyword\">execute</span>\nchmod <span class=\"hljs-number\">700</span> .ssh\nnano .ssh/authorized_keys\n</code></pre>\n<p>From your local machine, copy your public key <code>pbcopy &lt; ~/.ssh/id_rsa.pub</code>,\nand then paste it into <em>authorized_keys</em>. Save and close.</p>\n<p>Now restrict the permissions of the authorized_keys file with this command:</p>\n<pre><code class=\"hljs bash\">chmod <span class=\"hljs-number\">600</span> .ssh/authorized_keys\n</code></pre>\n<p>You will now be able to SSH into your server as the <em>deploy</em> user.</p>\n<h1 id=\"generate-a-server-public-key-from-capistrano-deployment\">Generate a server public key from Capistrano deployment</h1>\n<p>On the server run <code>ssh-keygen -t rsa</code> and follow the prompts.</p>\n<p>Then add the server key to your git repo host (github, bitbucket, etc) deployment keys.</p>\n<p><code>cat ~/.ssh/id_rsa.pub</code> will display the public key.</p>\n<h1 id=\"install-nginx\">Install Nginx</h1>\n<p>Update out-of-date packages</p>\n<pre><code class=\"hljs bash\">sudo apt-<span class=\"hljs-built_in\">get</span> <span class=\"hljs-keyword\">update</span>\n</code></pre>\n<p>Then, install Nginx:</p>\n<pre><code class=\"hljs bash\">sudo apt-<span class=\"hljs-keyword\">get</span> install curl git-core nginx\n</code></pre>\n<h1 id=\"configure-nginx-to-run-the-site\">Configure Nginx to run the site</h1>\n<p>Create a file named <em>static_site</em> under Nginx</p>\n<pre><code class=\"hljs bash\">cd /etc/nginx/sites-<span class=\"hljs-built_in\">available</span>\nnano static_site\n</code></pre>\n<p>Then add this config to the file</p>\n<pre><code>server {\n  root <span class=\"hljs-regexp\">/var/</span>www<span class=\"hljs-regexp\">/static_site/</span>current;\n}\n</code></pre><p><code>/var/www/static_site/current</code> is the path where the site files will live. We\nwill manually create the <em>static_site</em> directory later and Capistrano will create\nthe <em>current</em> directory during deployment.</p>\n<p>Next, we will enable the site and remove the default Nginx config.</p>\n<pre><code class=\"hljs bash\"><span class=\"hljs-function\"><span class=\"hljs-title\">cd</span></span> ../sites-enabled\n<span class=\"hljs-function\"><span class=\"hljs-title\">ln</span></span> -s ../sites-available/static_site static_site\nrm default\n</code></pre>\n<p>And, create the base directory for the site files and change permissions to\nbe owned by deploy.</p>\n<pre><code class=\"hljs bash\"><span class=\"hljs-built_in\">mkdir</span> /<span class=\"hljs-built_in\">var</span>/www/static_site\nchown deploy /<span class=\"hljs-built_in\">var</span>/www/static_site\n</code></pre>\n<h1 id=\"capistrano\">Capistrano</h1>\n<p>Add Capistrano to you Gemfile</p>\n<pre><code class=\"hljs rb\"><span class=\"hljs-attribute\">gem</span> <span class=\"hljs-string\">'capistrano'</span>, <span class=\"hljs-string\">'~&gt; 3.4.0'</span>\n</code></pre>\n<p>and run</p>\n<pre><code class=\"hljs bash\"><span class=\"hljs-keyword\">bundle </span>install\n</code></pre>\n<p>Capistrano needs a couple of directories and files so let&#39;s run</p>\n<pre><code class=\"hljs bash\"><span class=\"hljs-built_in\">cap</span> install\n</code></pre>\n<p>Add the following to the generated <code>deploy.rb</code> file, remembering to update the repo_url.</p>\n<pre><code class=\"hljs rb\"><span class=\"hljs-meta\"># deploy.rb</span>\n<span class=\"hljs-meta\"># config valid Capistrano 3.4.x</span>\nlock <span class=\"hljs-string\">'3.4.0'</span>\n\n<span class=\"hljs-keyword\">set</span> :application,   <span class=\"hljs-string\">'static_site'</span>\n<span class=\"hljs-keyword\">set</span> :repo_url,      <span class=\"hljs-string\">'git@&lt;repoUrlHere&gt;'</span>\n<span class=\"hljs-keyword\">set</span> :scm,           :git\n<span class=\"hljs-keyword\">set</span> :user,          <span class=\"hljs-string\">\"deploy\"</span>\n<span class=\"hljs-keyword\">set</span> :pty,           <span class=\"hljs-literal\">true</span>\n</code></pre>\n<p>Copy this to your <code>production.rb</code> file and update the server IP address.</p>\n<pre><code class=\"hljs rb\"><span class=\"hljs-meta\"># production.rb</span>\n<span class=\"hljs-keyword\">set</span> :application, <span class=\"hljs-string\">'static_site'</span>\n\n<span class=\"hljs-meta\">## Servers we are going to deploy to ----------------------</span>\nserver <span class=\"hljs-string\">'xxx.xxx.xxx.xxx'</span>, user: <span class=\"hljs-string\">'deploy'</span>\n\n<span class=\"hljs-meta\">## Server Settings ----------------------------------------</span>\n<span class=\"hljs-keyword\">set</span> :deploy_to, <span class=\"hljs-string\">\"/var/www/static_site\"</span>\n\n<span class=\"hljs-meta\">## Git Configuration Settings -----------------------------</span>\n<span class=\"hljs-keyword\">set</span> :branch, <span class=\"hljs-string\">\"master\"</span> # <span class=\"hljs-keyword\">set</span> to your desired branch\n</code></pre>\n<h2 id=\"test-out-capistrano\">Test out Capistrano</h2>\n<p>Check if necessary files and directories exist. If they don&#39;t, Capistrano will create\nthem.</p>\n<pre><code class=\"hljs bash\">bundle <span class=\"hljs-built_in\">exec</span> <span class=\"hljs-built_in\">cap</span> production deploy:check\n</code></pre>\n<h2 id=\"deploy-your-app\">Deploy your App</h2>\n<pre><code class=\"hljs bash\">bundle <span class=\"hljs-built_in\">exec</span> <span class=\"hljs-built_in\">cap</span> production deploy\n</code></pre>\n"}