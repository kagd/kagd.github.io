{"id":"/articles/2015/10/07/how-to-fix-openssl-ssl-sslerror-certificate-verify-failed","title":"How to fix OpenSSL::SSL::SSLError: certificate verify failed","date":"2015-10-07 17:23 MDT","tags":"rvm, ssl","content":"<p>If you are using RVM, make sure to install Ruby versions without binaries. I&#39;m\nnot sure why this works, but it does. The crappy part is that you have to do this\non every version bump of Ruby... boo.</p>\n<p><code>rvm install ruby-2.2.2 --without-binaries</code></p>\n<h2 id=\"update\">Update</h2>\n<p><em>February 9, 2015</em></p>\n<p>During my last install the Rails console was finding an old cert because it was\nnot looking at the correct directory.</p>\n<p>Run this in both an IRB and under your Rails console to verify that they are\nthe same values.</p>\n<pre><code>require <span class=\"hljs-string\">\"openssl\"</span>\n<span class=\"hljs-built_in\">puts</span> OpenSSL::OPENSSL_VERSION\n<span class=\"hljs-built_in\">puts</span> <span class=\"hljs-string\">\"SSL_CERT_FILE: %s\"</span> % OpenSSL::X509::DEFAULT_CERT_FILE\n<span class=\"hljs-built_in\">puts</span> <span class=\"hljs-string\">\"SSL_CERT_DIR: %s\"</span> % OpenSSL::X509::DEFAULT_CERT_DIR\n</code></pre><p>If they are different values, you may need to add this to your development environment\nfile:</p>\n<pre><code>SSL_CERT_FILE=<span class=\"hljs-regexp\">/usr/local</span><span class=\"hljs-regexp\">/etc/openssl</span><span class=\"hljs-regexp\">/cert.pem\nSSL_CERT_DIR=/usr</span><span class=\"hljs-regexp\">/local/etc</span><span class=\"hljs-regexp\">/openssl/certs</span>\n</code></pre>"}