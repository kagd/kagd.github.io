{"id":"/articles/2015/09/11/ui-router-multiple-nested-child-views-example","title":"UI Router Multiple Nested Child Views Example","date":"2015-09-11 05:18 MDT","tags":"angular, ui-router","downloads":"UI Router Example | 09-11-ui-router-multiple-nested-child-views-example.zip","content":"<p>Since you are here, I am assuming that you are wondering how to setup your angular\napp with the <a href=\"https://github.com/angular-ui/ui-router\">UI Router</a> with child views.</p>\n<p>UI Router has a pretty simple setup for full page changes, but is definitely a\nlittle tricky when it comes to child views changes. Not because the concept is\ndifficult, it&#39;s because the documentation leaves a lot to be desired. Luckily\nI have gone through the UI Router&#39;s wiki pages and have a simple example of child\nviews in action.</p>\n<p>Here is our base HTML. Really the only thing you will care about is near the bottom\nwith the <code>ui-view</code>s.</p>\n<pre><code class=\"hljs html\"><span class=\"hljs-meta\">&lt;!DOCTYPE html&gt;</span>\n<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">html</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">head</span>&gt;</span>\n  <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">title</span>&gt;</span>UiRouter<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">title</span>&gt;</span>\n  <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">link</span> <span class=\"hljs-attr\">rel</span>=<span class=\"hljs-string\">\"stylesheet\"</span> <span class=\"hljs-attr\">href</span>=<span class=\"hljs-string\">\"https://cdnjs.cloudflare.com/ajax/libs/foundation/5.5.2/css/foundation.min.css\"</span> <span class=\"hljs-attr\">media</span>=<span class=\"hljs-string\">\"screen\"</span> <span class=\"hljs-attr\">charset</span>=<span class=\"hljs-string\">\"utf-8\"</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">head</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">body</span> <span class=\"hljs-attr\">ng-app</span>=<span class=\"hljs-string\">\"myApp\"</span>&gt;</span>\n\n  <span class=\"hljs-comment\">&lt;!-- Navigation --&gt;</span>\n  <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">\"text-center\"</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">a</span> <span class=\"hljs-attr\">ui-sref</span>=<span class=\"hljs-string\">\"app\"</span>&gt;</span>Root<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">a</span>&gt;</span>\n  <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span>\n  <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">\"row\"</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">\"small-4 columns\"</span>&gt;</span>\n      <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">ul</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">\"side-nav\"</span>&gt;</span>\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">li</span>&gt;</span><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">a</span> <span class=\"hljs-attr\">ui-sref</span>=<span class=\"hljs-string\">\"app.panelOne.childOne\"</span>&gt;</span>Panel 1 Child 1<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">a</span>&gt;</span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">li</span>&gt;</span>\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">li</span>&gt;</span><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">a</span> <span class=\"hljs-attr\">ui-sref</span>=<span class=\"hljs-string\">\"app.panelOne.childTwo\"</span>&gt;</span>Panel 1 Child 2<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">a</span>&gt;</span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">li</span>&gt;</span>\n      <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">ul</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">\"small-4 columns end\"</span>&gt;</span>\n      <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">ul</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">\"side-nav\"</span>&gt;</span>\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">li</span>&gt;</span><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">a</span> <span class=\"hljs-attr\">ui-sref</span>=<span class=\"hljs-string\">\"app.panelTwo.childOne\"</span>&gt;</span>Panel 2 Child 1<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">a</span>&gt;</span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">li</span>&gt;</span>\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">li</span>&gt;</span><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">a</span> <span class=\"hljs-attr\">ui-sref</span>=<span class=\"hljs-string\">\"app.panelTwo.childTwo\"</span>&gt;</span>Panel 2 Child 2<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">a</span>&gt;</span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">li</span>&gt;</span>\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">li</span>&gt;</span><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">a</span> <span class=\"hljs-attr\">ui-sref</span>=<span class=\"hljs-string\">\"app.panelTwo.childThree\"</span>&gt;</span>Change panel in a diff parent<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">a</span>&gt;</span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">li</span>&gt;</span>\n      <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">ul</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span>\n  <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span>\n\n  <span class=\"hljs-comment\">&lt;!-- UI Views --&gt;</span>\n  <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">\"row\"</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">\"small-4 columns\"</span>&gt;</span>\n      <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span> <span class=\"hljs-attr\">ui-view</span>=<span class=\"hljs-string\">\"panelOne\"</span>&gt;</span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">\"small-4 columns\"</span>&gt;</span>\n      <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span> <span class=\"hljs-attr\">ui-view</span>=<span class=\"hljs-string\">\"panelTwo\"</span>&gt;</span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">\"small-4 columns\"</span>&gt;</span>\n      <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span> <span class=\"hljs-attr\">ui-view</span>=<span class=\"hljs-string\">\"panelThree\"</span>&gt;</span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span>\n  <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span>\n\n  <span class=\"hljs-comment\">&lt;!-- Scripts --&gt;</span>\n  <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">script</span> <span class=\"hljs-attr\">src</span>=<span class=\"hljs-string\">\"https://ajax.googleapis.com/ajax/libs/angularjs/1.4.5/angular.min.js\"</span>&gt;</span><span class=\"undefined\"></span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">script</span>&gt;</span>\n  <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">script</span> <span class=\"hljs-attr\">src</span>=<span class=\"hljs-string\">\"https://cdnjs.cloudflare.com/ajax/libs/angular-ui-router/0.2.15/angular-ui-router.min.js\"</span>&gt;</span><span class=\"undefined\"></span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">script</span>&gt;</span>\n  <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">script</span> <span class=\"hljs-attr\">src</span>=<span class=\"hljs-string\">\"myapp.js\"</span>&gt;</span><span class=\"undefined\"></span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">script</span>&gt;</span>\n\n<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">body</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">html</span>&gt;</span></code></pre>\n<p>The <code>ui-view</code>s are named so we can target the correct view when inserting the\nchild views.</p>\n<p>The rest is handled by our js.</p>\n<pre><code class=\"hljs js\">angular.module(<span class=\"hljs-string\">'myApp'</span>, [<span class=\"hljs-string\">'ui.router'</span>]);\n\nvar Config = <span class=\"hljs-keyword\">function</span>($stateProvider, $urlRouterProvider) {\n  $stateProvider.state(<span class=\"hljs-string\">'app'</span>, {\n    url: <span class=\"hljs-string\">\"/\"</span>,\n    views: {\n      <span class=\"hljs-string\">'panelOne'</span>: {\n        template: <span class=\"hljs-string\">\"&lt;h1&gt;Panel 1&lt;/h1&gt; &lt;div ui-view='panelOneContent'&gt;&lt;/div&gt;\"</span>\n      },\n      <span class=\"hljs-string\">'panelTwo'</span>: {\n        template: <span class=\"hljs-string\">\"&lt;h1&gt;Panel 2&lt;/h1&gt; &lt;div ui-view='panelTwoContent'&gt;&lt;/div&gt;\"</span>\n      },\n      <span class=\"hljs-string\">'panelThree'</span>: {\n        template: <span class=\"hljs-string\">\"&lt;h1&gt;Panel 3&lt;/h1&gt;\"</span>\n      }\n    }\n  })\n\n  // Panel One ================================================================\n  .state(<span class=\"hljs-string\">'app.panelOne'</span>, {\n    abstract: true,\n    url: <span class=\"hljs-string\">\"panel1\"</span>,\n    views: {\n      <span class=\"hljs-string\">'panelOneContent'</span>: {\n        template: <span class=\"hljs-string\">'&lt;div ui-view=\"content\"&gt;&lt;/div&gt;'</span>\n      }\n    }\n  })\n  .state(<span class=\"hljs-string\">'app.panelOne.childOne'</span>, {\n    url: <span class=\"hljs-string\">\"/child1\"</span>,\n    views: {\n      <span class=\"hljs-string\">'content'</span>: {\n        template: <span class=\"hljs-string\">'Panel 1 child 1'</span>\n      }\n    }\n  })\n  .state(<span class=\"hljs-string\">'app.panelOne.childTwo'</span>, {\n    url: <span class=\"hljs-string\">\"/child2\"</span>,\n    views: {\n      <span class=\"hljs-string\">'content'</span>: {\n        template: <span class=\"hljs-string\">'Panel 1 child 2'</span>\n      }\n    }\n  })\n\n  // Panel Two ================================================================\n  .state(<span class=\"hljs-string\">'app.panelTwo'</span>, {\n    abstract: true,\n    url: <span class=\"hljs-string\">\"panel2\"</span>,\n    views: {\n      <span class=\"hljs-string\">'panelTwoContent'</span>: {\n        template: <span class=\"hljs-string\">'&lt;div ui-view=\"content\"&gt;&lt;/div&gt;'</span>\n      }\n    }\n  })\n  .state(<span class=\"hljs-string\">'app.panelTwo.childOne'</span>, {\n    url: <span class=\"hljs-string\">\"/child1\"</span>,\n    views: {\n      <span class=\"hljs-string\">'content'</span>: {\n        template: <span class=\"hljs-string\">'Panel 2 child 1'</span>\n      }\n    }\n  })\n  .state(<span class=\"hljs-string\">'app.panelTwo.childTwo'</span>, {\n    url: <span class=\"hljs-string\">\"/child2\"</span>,\n    views: {\n      <span class=\"hljs-string\">'content'</span>: {\n        template: <span class=\"hljs-string\">'Panel 2 child 2'</span>\n      }\n    }\n  })\n  .state(<span class=\"hljs-string\">'app.panelTwo.childThree'</span>, {\n    url: <span class=\"hljs-string\">\"/child3\"</span>,\n    views: {\n      <span class=\"hljs-string\">'content'</span>: {\n        template: <span class=\"hljs-string\">'Panel 2 child 3'</span>\n      },\n      <span class=\"hljs-string\">'panelOne@'</span>: {\n        template: <span class=\"hljs-string\">'&lt;h2&gt;This one takes over Panel One&lt;/h2&gt;'</span>\n      }\n    }\n  });\n\n  $urlRouterProvider.otherwise(<span class=\"hljs-string\">\"/\"</span>);\n};\n\nangular.module(<span class=\"hljs-string\">'myApp'</span>).config(Config);\nConfig.$inject = [<span class=\"hljs-string\">'$stateProvider'</span>, <span class=\"hljs-string\">'$urlRouterProvider'</span>];</code></pre>\n<p>Let&#39;s go over the js state by state.</p>\n<pre><code class=\"hljs js\">$stateProvider.state(<span class=\"hljs-string\">'app'</span>, {\n  url: <span class=\"hljs-string\">\"/\"</span>,\n  views: {\n    <span class=\"hljs-string\">'panelOne'</span>: {\n      template: <span class=\"hljs-string\">\"&lt;h1&gt;Panel 1&lt;/h1&gt; &lt;div ui-view='panelOneContent'&gt;&lt;/div&gt;\"</span>\n    },\n    <span class=\"hljs-string\">'panelTwo'</span>: {\n      template: <span class=\"hljs-string\">\"&lt;h1&gt;Panel 2&lt;/h1&gt; &lt;div ui-view='panelTwoContent'&gt;&lt;/div&gt;\"</span>\n    },\n    <span class=\"hljs-string\">'panelThree'</span>: {\n      template: <span class=\"hljs-string\">\"&lt;h1&gt;Panel 3&lt;/h1&gt;\"</span>\n    }\n  }\n})</code></pre>\n<p><code>panelOne</code>, <code>panelTwo</code> and <code>panelThree</code> match up to the named views we have in\nour HTML (<code>&lt;div ui-view=&quot;panelOne&quot;&gt;&lt;/div&gt;</code>, <code>&lt;div ui-view=&quot;panelTwo&quot;&gt;&lt;/div&gt;</code>  and\n<code>&lt;div ui-view=&quot;panelThree&quot;&gt;&lt;/div&gt;</code>).</p>\n<p>The next state is just setup for adding child views to children.</p>\n<pre><code class=\"hljs js\"><span class=\"hljs-selector-class\">.state</span>(<span class=\"hljs-string\">'app.panelOne'</span>, {\n  <span class=\"hljs-attribute\">abstract</span>: true,\n  <span class=\"hljs-attribute\">url</span>: <span class=\"hljs-string\">\"panel1\"</span>,\n  <span class=\"hljs-attribute\">views</span>: {\n    <span class=\"hljs-string\">'panelOneContent'</span>: {\n      <span class=\"hljs-attribute\">template</span>: <span class=\"hljs-string\">'&lt;div ui-view=\"content\"&gt;&lt;/div&gt;'</span>\n    }\n  }\n})</code></pre>\n<p><code>panelOneContent</code> is the named view in the panelOne template</p>\n<pre><code class=\"hljs js\">'panelOne': {\n  template: \"<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">h1</span>&gt;</span>Panel 1<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">h1</span>&gt;</span> <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span> <span class=\"hljs-attr\">ui-view</span>=<span class=\"hljs-string\">'panelOneContent'</span>&gt;</span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span>\"\n}</code></pre>\n<p>I will admit this step seems a counterintuitive. Why insert a ui-view inside\nanother ui-view? Because this is the only way you can add children within children.\nUI Router doesn&#39;t know where to insert the view content without this step unfortunately.</p>\n<p>This next section does the same thing as the last except it is going to insert\nit&#39;s template in the <code>app.panelOne</code> content named view.</p>\n<pre><code class=\"hljs js\"><span class=\"hljs-selector-class\">.state</span>(<span class=\"hljs-string\">'app.panelTwo.childOne'</span>, {\n  <span class=\"hljs-attribute\">url</span>: <span class=\"hljs-string\">\"/child1\"</span>,\n  <span class=\"hljs-attribute\">views</span>: {\n    <span class=\"hljs-string\">'content'</span>: { <span class=\"hljs-comment\">// inserted into 'ui-view=\"content\"' in app.panelOne</span>\n      <span class=\"hljs-attribute\">template</span>: <span class=\"hljs-string\">'Panel 2 child 1'</span>\n    }\n  }\n})</code></pre>\n<p>The rest is just rinse and repeat, with one exception, <code>app.panelTwo.childThree</code>.</p>\n<pre><code class=\"hljs js\">.state(<span class=\"hljs-string\">'app.panelTwo.childThree'</span>, {\n  url: <span class=\"hljs-string\">\"/child3\"</span>,\n  views: {\n    <span class=\"hljs-string\">'content'</span>: {\n      template: <span class=\"hljs-string\">'Panel 2 child 3'</span>\n    },\n    <span class=\"hljs-string\">'panelOne@'</span>: { // replaces panelOne content\n      template: <span class=\"hljs-string\">'&lt;h2&gt;This one takes over Panel One&lt;/h2&gt;'</span>\n    }\n  }\n});</code></pre>\n<p>In addition to updating the &#39;content&#39; view for panel 2, it also populates content\ninto panelOne. It replaces <code>&lt;h1&gt;Panel 1&lt;/h1&gt; &lt;div ui-view=&#39;panelOneContent&#39;&gt;&lt;/div&gt;</code>\nwith <code>&lt;h2&gt;This one takes over Panel One&lt;/h2&gt;</code>. This is acheived by telling UI Router\nto use the absolute path to panelOne with the appended <code>@</code>.</p>\n<p>I will admit that this example is far from a real-life implementation, but it should\nshow you how to use child views.</p>\n"}