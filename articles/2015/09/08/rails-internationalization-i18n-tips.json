{"id":"/articles/2015/09/08/rails-internationalization-i18n-tips","title":"Rails Internationalization (I18n) Tips","date":"2015-09-08 02:12 MDT","tags":"rails, i18n","content":"<p>Internationalization (I18n) in Rails is a pretty simple concept. Just create a YML\nfile with your translations and Rails will slurp them in for the various languages\nthat you support. The problem is that the documentation leaves a little to be desired.\nHere are just a few tips that I have used.</p>\n<p>READMORE</p>\n<h2 id=\"activemodel-instead-of-activerecord\">activemodel instead of activerecord</h2>\n<p>I use activerecord and mongoid on a daily basis and while most of the documentation\nof Rails I18n shows <code>en.activerecord</code>, use <code>en.activemodel</code> instead. No matter if\nyou are using mongoid or activerecord or a non-persisted form object, they both all\nuse activemodel.</p>\n<pre><code class=\"hljs yml\"><span class=\"hljs-meta\"># /config/locales/en.yml</span>\n<span class=\"hljs-symbol\">en:</span>\n<span class=\"hljs-symbol\">  activemodel:</span> <span class=\"hljs-meta\"># Notice how this is not activerecord</span>\n<span class=\"hljs-symbol\">    attributes:</span>\n<span class=\"hljs-symbol\">      user:</span>\n<span class=\"hljs-symbol\">        name:</span> Full Name\n<span class=\"hljs-symbol\">    models:</span>\n<span class=\"hljs-symbol\">       user:</span> User\n</code></pre>\n<h2 id=\"i18n_key\">i18n_key</h2>\n<p>I have had more than a few occasions where I was wondering what the i18n path was\nfor an attribute on a form object, mongoid model, and active model. Here is a\nsimple helper to get the model portion of the path:</p>\n<pre><code class=\"hljs rb\">Forms::UserForm<span class=\"hljs-selector-class\">.model_name</span><span class=\"hljs-selector-class\">.i18n_key</span> #=&gt; forms/user_form\n</code></pre>\n<p>This information can be useful for debugging purposes and show you how the model\nyml needs to be setup. Here is a yml example:</p>\n<pre><code class=\"hljs yml\"><span class=\"hljs-meta\"># /config/locales/en.yml</span>\n<span class=\"hljs-symbol\">en:</span>\n<span class=\"hljs-symbol\">  activemodel:</span>\n<span class=\"hljs-symbol\">    attributes:</span>\n      forms/user_form:\n<span class=\"hljs-symbol\">        name:</span> Full Name\n<span class=\"hljs-symbol\">    models:</span>\n       forms/user_form: User\n</code></pre>\n<p>While this only gives a partial path, it is a good starting point if you are lost.</p>\n<h2 id=\"translations-for-a-single-page\">Translations for a single page</h2>\n<p>Most of the Rails I18n docs show translations for models and attributes. But as\nyou start putting you app together you will need to display copy that is not a\nmodel or attribute value. To get the translation for the current file, you just\nuse a period before the key. So if the translation key you want to use is &quot;headline&quot;,\nyou would put a dot (.) in front of headline:</p>\n<pre><code class=\"hljs rb\"># <span class=\"hljs-regexp\">/app/</span>views<span class=\"hljs-regexp\">/users/</span>show.html.erb\nt(<span class=\"hljs-string\">'.headline'</span>)\n</code></pre>\n<p>Assuming the file calling this is located <code>/app/views/users/show.html.erb</code>, our yml\nfile will look like:</p>\n<pre><code class=\"hljs yml\"><span class=\"hljs-meta\"># /config/locales/en.yml</span>\n<span class=\"hljs-symbol\">en:</span>\n<span class=\"hljs-symbol\">  users:</span>\n<span class=\"hljs-symbol\">    show:</span>\n<span class=\"hljs-symbol\">      headline:</span> User show page\n</code></pre>\n"}