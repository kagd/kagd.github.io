{"id":"/articles/2019/01/29/6-helpful-js-array-utilities","title":"6 Helpful JS Array Utilities","date":"2019-1-29","tags":"javascript","content":"<h2 id=\"remove-duplicates-from-an-array-of-numbersstrings\">Remove duplicates from an array of numbers/strings</h2>\n<pre><code class=\"hljs js\">const values = [<span class=\"hljs-number\">3</span>, <span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">3</span>, <span class=\"hljs-number\">5</span>, <span class=\"hljs-number\">2</span>, <span class=\"hljs-number\">4</span>, <span class=\"hljs-number\">4</span>, <span class=\"hljs-number\">4</span>];\nconst uniqueValues = [...new Set(values)];\n<span class=\"hljs-comment\">// =&gt; [3, 1, 5, 2, 4]</span></code></pre>\n<h2 id=\"a-simple-search-case-sensitive\">A simple search (case-sensitive)</h2>\n<pre><code class=\"hljs js\">const users = [\n  { <span class=\"hljs-string\">id:</span> <span class=\"hljs-number\">11</span>, <span class=\"hljs-string\">name:</span> <span class=\"hljs-string\">'Adam'</span>, <span class=\"hljs-string\">age:</span> <span class=\"hljs-number\">23</span>, <span class=\"hljs-string\">group:</span> <span class=\"hljs-string\">'editor'</span> },\n  { <span class=\"hljs-string\">id:</span> <span class=\"hljs-number\">47</span>, <span class=\"hljs-string\">name:</span> <span class=\"hljs-string\">'John'</span>, <span class=\"hljs-string\">age:</span> <span class=\"hljs-number\">28</span>, <span class=\"hljs-string\">group:</span> <span class=\"hljs-string\">'admin'</span> },\n  { <span class=\"hljs-string\">id:</span> <span class=\"hljs-number\">85</span>, <span class=\"hljs-string\">name:</span> <span class=\"hljs-string\">'William'</span>, <span class=\"hljs-string\">age:</span> <span class=\"hljs-number\">34</span>, <span class=\"hljs-string\">group:</span> <span class=\"hljs-string\">'editor'</span> },\n  { <span class=\"hljs-string\">id:</span> <span class=\"hljs-number\">97</span>, <span class=\"hljs-string\">name:</span> <span class=\"hljs-string\">'Oliver'</span>, <span class=\"hljs-string\">age:</span> <span class=\"hljs-number\">28</span>, <span class=\"hljs-string\">group:</span> <span class=\"hljs-string\">'admin'</span> }\n];\nusers.filter(it =&gt; it.name.includes(<span class=\"hljs-string\">'oli'</span>));\n<span class=\"hljs-comment\">// =&gt; []</span></code></pre>\n<h2 id=\"a-simple-search-case-insensitive\">A simple search (case-insensitive)</h2>\n<pre><code class=\"hljs js\">const users = [\n  { <span class=\"hljs-string\">id:</span> <span class=\"hljs-number\">11</span>, <span class=\"hljs-string\">name:</span> <span class=\"hljs-string\">'Adam'</span>, <span class=\"hljs-string\">age:</span> <span class=\"hljs-number\">23</span>, <span class=\"hljs-string\">group:</span> <span class=\"hljs-string\">'editor'</span> },\n  { <span class=\"hljs-string\">id:</span> <span class=\"hljs-number\">47</span>, <span class=\"hljs-string\">name:</span> <span class=\"hljs-string\">'John'</span>, <span class=\"hljs-string\">age:</span> <span class=\"hljs-number\">28</span>, <span class=\"hljs-string\">group:</span> <span class=\"hljs-string\">'admin'</span> },\n  { <span class=\"hljs-string\">id:</span> <span class=\"hljs-number\">85</span>, <span class=\"hljs-string\">name:</span> <span class=\"hljs-string\">'William'</span>, <span class=\"hljs-string\">age:</span> <span class=\"hljs-number\">34</span>, <span class=\"hljs-string\">group:</span> <span class=\"hljs-string\">'editor'</span> },\n  { <span class=\"hljs-string\">id:</span> <span class=\"hljs-number\">97</span>, <span class=\"hljs-string\">name:</span> <span class=\"hljs-string\">'Oliver'</span>, <span class=\"hljs-string\">age:</span> <span class=\"hljs-number\">28</span>, <span class=\"hljs-string\">group:</span> <span class=\"hljs-string\">'admin'</span> }\n];\nusers.filter(it =&gt; <span class=\"hljs-keyword\">new</span> RegExp(<span class=\"hljs-string\">'oli'</span>, <span class=\"hljs-string\">\"i\"</span>).test(it.name))\n<span class=\"hljs-comment\">// =&gt; [{ id: 97, name: 'Oliver', age: 28, group: 'admin' }]</span></code></pre>\n<h2 id=\"flattening-an-array-of-arrays\">Flattening an array of arrays</h2>\n<pre><code class=\"hljs js\">const nested = [[<span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">2</span>, <span class=\"hljs-number\">3</span>], [<span class=\"hljs-number\">4</span>, <span class=\"hljs-number\">5</span>, <span class=\"hljs-number\">6</span>], [<span class=\"hljs-number\">7</span>, <span class=\"hljs-number\">8</span>, <span class=\"hljs-number\">9</span>]];\nnested.reduce((acc, it) =&gt; [...acc, ...it], []);\n<span class=\"hljs-comment\">// =&gt; [1, 2, 3, 4, 5, 6, 7, 8, 9]</span>\n<span class=\"hljs-comment\">//</span>\n<span class=\"hljs-comment\">// or more simple yet</span>\n[].concat.apply([], nested);</code></pre>\n<h2 id=\"union-of-arrays\">Union of arrays</h2>\n<pre><code class=\"hljs js\">const arrA = [<span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">4</span>, <span class=\"hljs-number\">3</span>, <span class=\"hljs-number\">2</span>];\nconst arrB = [<span class=\"hljs-number\">5</span>, <span class=\"hljs-number\">2</span>, <span class=\"hljs-number\">6</span>, <span class=\"hljs-number\">7</span>, <span class=\"hljs-number\">1</span>];\n[...new Set([...arrA, ...arrB])];\n<span class=\"hljs-comment\">// =&gt; [1, 4, 3, 2, 5, 6, 7]</span></code></pre>\n<h2 id=\"intersection-of-arrays\">Intersection of arrays</h2>\n<pre><code class=\"hljs js\">const arrA = [<span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">4</span>, <span class=\"hljs-number\">3</span>, <span class=\"hljs-number\">2</span>];\nconst arrB = [<span class=\"hljs-number\">5</span>, <span class=\"hljs-number\">2</span>, <span class=\"hljs-number\">6</span>, <span class=\"hljs-number\">7</span>, <span class=\"hljs-number\">1</span>];\narrA.filter(it =&gt; arrB.includes(it));\n<span class=\"hljs-comment\">// =&gt; [1, 2]</span></code></pre>\n<p><a href=\"https://medium.com/@alex.permyakov/15-useful-javascript-examples-of-map-reduce-and-filter-74cbbb5e0a1f\">Reference</a></p>\n"}