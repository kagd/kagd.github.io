<?xml version="1.0" encoding="UTF-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Blog Name</title>
  <subtitle>Blog subtitle</subtitle>
  <id>http://blog.url.com/articles</id>
  <link href="http://blog.url.com/articles"/>
  <link href="http://blog.url.com/feed.xml" rel="self"/>
  <updated>2016-06-16T11:03:00-05:00</updated>
  <author>
    <name>Blog Author</name>
  </author>
  <entry>
    <title>Error while installing therubyracer gem</title>
    <link rel="alternate" href="http://blog.url.com/articles/2016/06/16/error-while-installing-therubyracer-gem.html"/>
    <id>http://blog.url.com/articles/2016/06/16/error-while-installing-therubyracer-gem.html</id>
    <published>2016-06-16T11:03:00-05:00</published>
    <updated>2016-06-22T00:53:10-05:00</updated>
    <author>
      <name>Article Author</name>
    </author>
    <content type="html">&lt;p&gt;This article is related to &lt;a href="/articles/2016/06/16/error-while-installing-libv8-gem.html"&gt;Error while installing libv8 gem&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;If you ran into this error &lt;code class="prettyprint"&gt;ERROR: Failed to build gem native extension&lt;/code&gt; or
something the like, I found a solution.&lt;/p&gt;

&lt;p&gt;You can use the Libv8 from the brew instead of the one from gem. You can do that by following commands:&lt;/p&gt;

&lt;pre&gt;&lt;code class="prettyprint"&gt;$ gem uninstall libv8
$ brew install v8
$ gem install therubyracer
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Reference:
&lt;a href="http://stackoverflow.com/questions/11598655/therubyracer-install-error"&gt;http://stackoverflow.com/questions/11598655/therubyracer-install-error&lt;/a&gt;&lt;/p&gt;
</content>
  </entry>
  <entry>
    <title>Error while installing libv8 gem</title>
    <link rel="alternate" href="http://blog.url.com/articles/2016/06/16/error-while-installing-libv8-gem.html"/>
    <id>http://blog.url.com/articles/2016/06/16/error-while-installing-libv8-gem.html</id>
    <published>2016-06-16T10:55:00-05:00</published>
    <updated>2016-06-16T10:59:45-05:00</updated>
    <author>
      <name>Article Author</name>
    </author>
    <content type="html">&lt;p&gt;While installing libv8 gem during a bundle install I ran into this error:&lt;/p&gt;

&lt;pre&gt;&lt;code class="prettyprint"&gt;Gem::Ext::BuildError: ERROR: Failed to build gem native extension.
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;This is due to the fact that OS X 10.9+ is using version 4.8 of GCC. This is not
supported officially in older versions of libv8.&lt;/p&gt;

&lt;p&gt;Here is the fix:&lt;/p&gt;

&lt;p&gt;&lt;code class="prettyprint"&gt;gem install libv8 -v &amp;#39;3.16.14.13&amp;#39; -- --with-system-v8&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Reference: &lt;a href="http://stackoverflow.com/questions/19577759/installing-libv8-gem-on-os-x-10-9"&gt;http://stackoverflow.com/questions/19577759/installing-libv8-gem-on-os-x-10-9&lt;/a&gt;&lt;/p&gt;
</content>
  </entry>
  <entry>
    <title>Simulate Cursor Typing with Angular</title>
    <link rel="alternate" href="http://blog.url.com/articles/2015/11/05/simulate-cursor-typing-with-angular.html"/>
    <id>http://blog.url.com/articles/2015/11/05/simulate-cursor-typing-with-angular.html</id>
    <published>2015-11-05T01:20:00-06:00</published>
    <updated>2015-11-05T01:25:04-06:00</updated>
    <author>
      <name>Article Author</name>
    </author>
    <content type="html">&lt;p&gt;Create the illusion of dynamic typing with a simple Angular directive.&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;

&lt;p&gt;Here it is in action. (You may need to reload the page to see it fully)&lt;/p&gt;

&lt;pre&gt;
&lt;h3 livetype="javascript"&gt;&lt;/h3&gt;
&lt;/pre&gt;

&lt;p&gt;This can be accomplished with a simple directive&lt;/p&gt;

&lt;pre&gt;&lt;code class="prettyprint lang-coffee"&gt;Directive = ($timeout) -&amp;gt;
  getRandomMs = (min, max) -&amp;gt;
    Math.floor(Math.random() * (max - min)) + min

  link = (scope) -&amp;gt;
    scope.string = &amp;#39;&amp;#39;

    # Split the string into an array
    chars = scope.livetype.split(&amp;#39;&amp;#39;)

    # the loop to create the typing illusion
    chars.reduce (lastMs, currentChar, idx) -&amp;gt;
      newMs = lastMs + getRandomMs(50, 750)

      $timeout -&amp;gt;
        scope.string += currentChar
      , newMs

      return newMs
    , 0

  {
    link: link
    restrict: &amp;#39;A&amp;#39;
    scope:
      livetype: &amp;#39;@livetype&amp;#39;
    template: &amp;#39;{{ string }}&amp;lt;span class=&amp;quot;livetype-cursor&amp;quot;&amp;gt;|&amp;lt;/span&amp;gt;&amp;#39;
  }

angular.module(&amp;#39;liveType&amp;#39;, []).directive &amp;#39;livetype&amp;#39;, Directive
Directive.$inject = [&amp;#39;$timeout&amp;#39;]
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;The HTML&lt;/p&gt;

&lt;pre&gt;&lt;code class="prettyprint lang-html"&gt;&amp;lt;h4 livetype=&amp;quot;javascript&amp;quot;&amp;gt;&amp;lt;/h4&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;And don&amp;rsquo;t forget out the CSS for the cursor blink&lt;/p&gt;

&lt;pre&gt;&lt;code class="prettyprint lang-css"&gt;@keyframes livetype-cursor-blink {
  0%   { opacity: 0; }
  50%  { opacity: 1; }
  100% { opacity: 0; }
}
.livetype-cursor {
  animation: livetype-cursor-blink 750ms infinite;
}
&lt;/code&gt;&lt;/pre&gt;

&lt;style type="text/css"&gt;
@keyframes livetype-cursor-loop {
  0%   { opacity: 0; }
  50%  { opacity: 1; }
  100% { opacity: 0; }
}
.livetype-cursor {
  animation: livetype-cursor-loop 750ms infinite;
}
&lt;/style&gt;
</content>
  </entry>
  <entry>
    <title>75 points &amp; 75 rebounds in 4 games... sick!</title>
    <link rel="alternate" href="http://blog.url.com/articles/2015/11/04/75-points-75-rebounds-in-4-games-sick.html"/>
    <id>http://blog.url.com/articles/2015/11/04/75-points-75-rebounds-in-4-games-sick.html</id>
    <published>2015-11-04T23:23:00-06:00</published>
    <updated>2015-11-04T23:31:00-06:00</updated>
    <author>
      <name>Article Author</name>
    </author>
    <content type="html">&lt;blockquote class="twitter-tweet" lang="en"&gt;&lt;p lang="en" dir="ltr"&gt;NERD NOTES: Andre Drummond is only player since 1976 with at least 75 Pts &amp;amp; 75 Reb in the first 4 games of a season. &lt;a href="https://t.co/33TvPkdug2"&gt;pic.twitter.com/33TvPkdug2&lt;/a&gt;&lt;/p&gt;&amp;mdash; Mike &amp;amp; Mike (@MikeAndMike) &lt;a href="https://twitter.com/MikeAndMike/status/661888253688217600"&gt;November 4, 2015&lt;/a&gt;&lt;/blockquote&gt;

&lt;script async src="//platform.twitter.com/widgets.js" charset="utf-8"&gt;&lt;/script&gt;
</content>
  </entry>
  <entry>
    <title>Installing the PG Gem with PostgresApp</title>
    <link rel="alternate" href="http://blog.url.com/articles/2015/11/04/installing-the-pg-gem-with-postgresapp.html"/>
    <id>http://blog.url.com/articles/2015/11/04/installing-the-pg-gem-with-postgresapp.html</id>
    <published>2015-11-04T21:46:00-06:00</published>
    <updated>2015-11-04T22:32:30-06:00</updated>
    <author>
      <name>Article Author</name>
    </author>
    <content type="html">&lt;p&gt;If you are having problem installing the pg gem and are using the Postgres app there
is a good chance that the gem can&amp;rsquo;t find the correct configuration for Postgres since
the config file is not availabe in &lt;code class="prettyprint"&gt;$PATH&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;

&lt;p&gt;Try installing the gem with the command below, remembering to change the version
number to your installed version.&lt;/p&gt;

&lt;pre&gt;&lt;code class="prettyprint lang-bash"&gt;gem install pg -- --with-pg-config=/Applications/Postgres.app/Contents/Versions/9.4/bin/pg_config
&lt;/code&gt;&lt;/pre&gt;
</content>
  </entry>
  <entry>
    <title>Ruby Fibonacci Sequence Generator</title>
    <link rel="alternate" href="http://blog.url.com/articles/2015/10/30/ruby-fibonacci-sequence-generator.html"/>
    <id>http://blog.url.com/articles/2015/10/30/ruby-fibonacci-sequence-generator.html</id>
    <published>2015-10-30T22:14:00-05:00</published>
    <updated>2015-10-30T22:17:45-05:00</updated>
    <author>
      <name>Article Author</name>
    </author>
    <content type="html">&lt;p&gt;Just a simple function to generate a Fibonacci sequence to a defined number of places.&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code class="prettyprint lang-rb"&gt;def fibonacci_sequence(number_of_places)
  base_number = 0
  added_number = 1

  (1..number_of_places).map do |num|
    base_number_tmp = base_number
    base_number = added_number
    added_number = base_number_tmp + added_number
  end
end

def reverse_fibonacci_sequence(number_of_places)
  fibonacci_sequence(number_of_places).reverse
end
&lt;/code&gt;&lt;/pre&gt;
</content>
  </entry>
</feed>
